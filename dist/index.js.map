{"version":3,"sources":["../src/index.js"],"names":["__dirname","data","JSON","parse","console","log","name","init"],"mappings":";;;;;;;;;;AAqCA;;;AAIA;;sFACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmB,mCAAoB,mBAAEA,SAAF,EAAa,iBAAb,CAApB,CADnB;;AAAA;AACMC,gBADN;;AAEEA,mBAAOC,KAAKC,KAAL,CAAWF,IAAX,CAAP;AACAG,oBAAQC,GAAR,CAAYJ,KAAKK,IAAjB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,I;;;;;AAzCf;;AAkBA;;AACA;;AACA;;;;AArBA;AAiCAH,QAAQC,GAAR,CAAY,OAAZ;AA/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAgBAD,QAAQC,GAAR,CAAY,UAAZ,EAAwB,mBAAxB;AACAD,QAAQC,GAAR;AAYAE,O,CAAQ","file":"index.js","sourcesContent":["// import { promisify } from 'util'\nimport { resolve as r } from 'path'\n// import { readFile, writeFileSync as wfs } from 'fs'\n// import * as qs from 'querystring'\n//\n//\n// promisify(readFile)(r(__dirname, '../package.json')) //透過promisify轉成 readFile 給他傳一個路徑 可透過 r 修改成絕對路徑 （__dirname 當前文件  ../package.json 目標文件）\n//   .then(data => {\n//     data = JSON.parse(data)\n//     console.log(data.name);\n//\n//     wfs(r(__dirname, './name'), String(data.name), 'utf8')\n//   }) //透過wfs 寫入本地文件中  給個路徑 寫到當前 ./name裡面  再把 data.name 轉成字串 utf8 格式\n//\n\n// as 代表改變名稱 像 resolve 改成 r\n\n\n//測示 export\nimport { promisify } from 'util'\nimport { readFile } from 'fs'\nimport { name } from './ex'\nimport { getName } from './ex'\n\n\nimport {\n  name2 as name3,\n  getName2 as getName3,\n  age as age2\n} from './ex'\n\n\n\nconsole.log('name3', name3);\nconsole.log('getName3', getName3());\nconsole.log(age2);\n\n//導出引入一定 要用 {}\n\n\n\n//新增一個異步操作\nasync function init () {\n  let data = await promisify(readFile)(r(__dirname, '../package.json'))\n  data = JSON.parse(data)\n  console.log(data.name)\n}\ninit()  //調用\n"]}