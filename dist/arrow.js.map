{"version":3,"sources":["../src/arrow.js"],"names":["luke","id","say","setTimeout","console","log","sayWithThis","that","sayWithArrow","sayWithGlobalArrow"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,IAAMA,OAAO;AACXC,MAAI,CADO;AAEXC,OAAK,eAAY;AACfC,eAAW,YAAY;AACrBC,cAAQC,GAAR,CAAY,KAAZ,EAAmB,KAAKJ,EAAxB;AACD,KAFD,EAEG,EAFH;AAGD,GANU,EAMR;AACHK,eAAa,uBAAY;AACvB,QAAIC,OAAO,IAAX,CADuB,CACP;AAChBJ,eAAW,YAAY;AACrBC,cAAQC,GAAR,CAAY,WAAZ,EAAyBE,KAAKN,EAA9B;AACD,KAFD,EAEG,GAFH;AAGD,GAZU,EAYR;AACHO,gBAAc,wBAAY;AAAA;;AACxBL,eAAW,YAAM;AACfC,cAAQC,GAAR,CAAY,UAAZ,EAAwB,MAAKJ,EAA7B;AACD,KAFD,EAEG,IAFH;AAGD,GAjBU,EAiBR;AACHQ,sBAAoB,8BAAM;AACxBN,eAAW,YAAM;AACfC,cAAQC,GAAR,CAAY,iBAAZ,EAA+B,UAAKJ,EAApC;AACD,KAFD,EAEG,IAFH;AAGD,GAtBU,CAsBV;;;AAGH;;AAzBa,CAAb,CA2BAD,KAAKE,GAAL;AACAF,KAAKM,WAAL;AACAN,KAAKQ,YAAL;AACAR,KAAKS,kBAAL","file":"arrow.js","sourcesContent":["// const arrow = function (param) {}\n//\n// //形式寫法\n//\n// const arrow = (param) => {} //與上面寫法是等同的\n//\n// const arrow = param => {} //只有一個參數的話 可這樣寫\n//\n// const arrow = param => console.log(param); // 如果只有一句代碼的話 可以這樣寫\n//\n// const arrow = param => ({param: param}) // 如果需要返回一個對象的話 可以這樣寫\n//\n// const arrow = (param1, param2, param3) => {}  //如果是傳多個對象的話\n//\n//\n// //{id: 1, movie; xxx}\n// const arrow = ({id, movie}) => {\n//   console.log(id, movie);\n// }\n\n\n//箭頭函數的好處呢就是代碼可以更精簡\n\n//從前的方法\nconst luke = {\n  id: 2,\n  say: function () {\n    setTimeout(function () {\n      console.log('id:', this.id);\n    }, 50)\n  }, //空値\n  sayWithThis: function () {\n    let that = this //self me _this\n    setTimeout(function () {\n      console.log('this id: ', that.id);\n    }, 500)\n  }, // 舊寫法\n  sayWithArrow: function () {\n    setTimeout(() => {\n      console.log('arrow id', this.id);\n    }, 1500)\n  }, //最佳寫法\n  sayWithGlobalArrow: () => {\n    setTimeout(() => {\n      console.log('global arrow id', this.id);\n    }, 2000)\n  }//因為前面已經引用箭頭函數 代表全局id 所以找不到\n}\n\n//調用\n\nluke.say()\nluke.sayWithThis()\nluke.sayWithArrow()\nluke.sayWithGlobalArrow()\n"]}