{"version":3,"sources":["../src/cb-promise.js"],"names":["fs","require","readFileAsync","path","Promise","resolve","reject","readFile","err","data","util","promisify","then","JSON","parse","console","log","name","catch"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX,C,CAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAASC,aAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,OAAGO,QAAH,CAAYJ,IAAZ,EAAkB,UAACK,GAAD,EAAMC,IAAN,EAAe;AAC/B,UAAID,GAAJ,EAASF,OAAOE,GAAP,EAAT,KACKH,QAAQI,IAAR;AACN,KAHD;AAID,GALM,CAAP;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,IAAMC,OAAOT,QAAQ,MAAR,CAAb;;AAEAS,KAAKC,SAAL,CAAeX,GAAGO,QAAlB,EAA4B,gBAA5B,EAA8C;AAA9C,CACEK,IADF,CACOC,KAAKC,KADZ,EAEEF,IAFF,CAEO,gBAAQ;AACZG,UAAQC,GAAR,CAAYP,KAAKQ,IAAjB;AACD,CAJF,EAKEC,KALF,CAKQ,eAAO;AACZH,UAAQC,GAAR,CAAYR,GAAZ;AACD,CAPF","file":"cb-promise.js","sourcesContent":["const fs = require('fs') //引用文件的接口\n\n//   fs.readFile('./package.json', (err, data) => {\n//     if (err) return console.log(err)\n//     data = JSON.parse(data)\n//     console.log(data.name)\n// })\n//舊的回調寫法\n\n//-------\n//原生node promise\nfunction readFileAsync (path) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, (err, data) => {\n      if (err) reject(err)\n      else resolve(data)\n    })\n  })\n}\n//調用方法\n// readFileAsync('./package.json') //path\n//   .then(data => {\n//     data = JSON.parse(data);\n//     console.log(data.name)\n// })\n// .catch(err => {\n//   console.log(err)\n// })\n\n//同步調用 （2017 作法大眾做法）\n\n//-------\n\n//新作法 node 8後  promisify 處理回調 精簡寫法推薦\nconst util = require('util')\n\nutil.promisify(fs.readFile)('./package.json') //包裝callback的方式 (後面是調用參數)\n .then(JSON.parse)\n .then(data => {\n   console.log(data.name);\n })\n .catch(err => {\n   console.log(err);\n })\n"]}